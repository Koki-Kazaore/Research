# -*- coding: utf-8 -*-
"""formatLookUpCSV.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mxT0nS7CPlzupKXZ7Ap3M13GQ72w1G8z

# 概要
TLCから提供されている，LocationIDとZoneをマッピングしているCSVファイルを整形する．

# 入力
[taxi_zone_lookup.csv](https://d37ci6vzurychx.cloudfront.net/misc/taxi_zone_lookup.csv)

# 出力
`taxi_zone_lookup_with_coordinates.csv`
"""

from geopy.geocoders import Nominatim
from google.colab import files
import pandas as pd
import time

# CSVファイルをデータフレームとして読み込む
df = pd.read_csv('/content/taxi_zone_lookup.csv')

# データフレームの内容を表示
df

# CSVデータのパス
csv_file_path = '/content/taxi_zone_lookup.csv'

# CSVファイルを読み込む
df_zones = pd.read_csv(csv_file_path)

# Geolocatorの設定
geolocator = Nominatim(user_agent="nyc_taxi_zones")

# 経度と緯度を追加する関数
def get_lat_lon(zone):
    try:
        location = geolocator.geocode(f"{zone}, New York City, NY")
        if location:
            return location.latitude, location.longitude
        else:
            return None, None
    except:
        return None, None


# 各ゾーンに対して経度と緯度を取得
df_zones['Latitude'], df_zones['Longitude'] = zip(*df_zones['Zone'].apply(get_lat_lon))
time.sleep(1)  # API呼び出し間の待機時間

# 結果出力
df_zones

# ダウンロード

# データフレームをCSVファイルとして保存
csv_filename = 'taxi_zone_lookup_with_coordinates.csv'
df_zones.to_csv(csv_filename, index=False)

# CSVファイルをダウンロード
files.download(csv_filename)

"""# 手修正
ダウンロードされたCSVファイルには経度と緯度がNULL値になっているレコードも含まれることが予想されるため，手動で修正し，NULLを許容しない．

`Zone`カラムがnullもしくは`Outside of NYC`のカラムは削除する．
"""